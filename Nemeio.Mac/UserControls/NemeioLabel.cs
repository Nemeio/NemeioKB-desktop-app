// This file has been autogenerated from a class added in the UI designer.

using System;
using System.ComponentModel;
using AppKit;
using Foundation;
using Nemeio.Mac.Models;

namespace Nemeio.Mac.UserControls
{
    public partial class NemeioLabel : NSTextField
	{
        private NSColor _colorBeforeClick;
        private float _fontSizeBeforeMouseEnter;
        private NSTrackingArea _trackingArea;

        [Export("SupportHover"), Browsable(true)]
        public bool SupportHover { get; set; } = true;

        [Export("SupportClick"), Browsable(true)]
        public bool SupportClick { get; set; } = true;

        public NemeioLabel (IntPtr handle)
            : base (handle) { }

        public override void MouseEntered(NSEvent theEvent)
        {
            base.MouseEntered(theEvent);

            if (!SupportHover)
            {
                return;
            }

            _fontSizeBeforeMouseEnter = (float)Font.PointSize;

            Font = MacFontHelper.GetOpenSansBold(_fontSizeBeforeMouseEnter);
        }

        public override void MouseExited(NSEvent theEvent)
        {
            base.MouseExited(theEvent);

            if (!SupportHover)
            {
                return;
            }

            Font = MacFontHelper.GetOpenSans(_fontSizeBeforeMouseEnter);
        }

        public override void MouseUp(NSEvent theEvent)
        {
            base.MouseUp(theEvent);

            if (!SupportClick)
            {
                return;
            }

            TextColor = _colorBeforeClick;
        }

        public override void MouseDown(NSEvent theEvent)
        {
            base.MouseDown(theEvent);

            if (!SupportClick)
            {
                return;
            }

            _colorBeforeClick = TextColor;

            TextColor = MacColorHelper.FromHex(NemeioColor.Purple);
        }

        public override void UpdateTrackingAreas()
        {
            base.UpdateTrackingAreas();

            if (_trackingArea != null)
            {
                RemoveTrackingArea(_trackingArea);
            }

            _trackingArea = new NSTrackingArea(
                Bounds,
                NSTrackingAreaOptions.MouseEnteredAndExited | NSTrackingAreaOptions.ActiveAlways,
                this,
                null
            );

            AddTrackingArea(_trackingArea);
        }
    }
}
